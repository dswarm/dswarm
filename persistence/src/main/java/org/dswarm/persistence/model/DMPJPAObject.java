/**
 * Copyright (C) 2013 â€“ 2015 SLUB Dresden & Avantgarde Labs GmbH (<code@dswarm.org>)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.dswarm.persistence.model;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.MappedSuperclass;
import javax.xml.bind.annotation.XmlID;

/**
 * The abstract POJO class for entities where the identifier should be generated by the utilised database.
 * 
 * @author tgaengler
 */
@MappedSuperclass
// @JsonIdentityInfo(generator=ObjectIdGenerators.PropertyGenerator.class, property="id")
public abstract class DMPJPAObject extends DMPObject<Long> {

	/**
	 *
	 */
	private static final long	serialVersionUID	= 1L;

	/**
	 * The identifier of the entity.
	 */
	@Id
	@XmlID
	@Access(AccessType.FIELD)
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "ID")
	protected Long				id;

	@Override
	public Long getId() {

		return id;
	}

	@Override
	public boolean completeEquals(final Object obj) {

		return DMPJPAObject.class.isInstance(obj) && super.completeEquals(obj);
	}

}
